{"version":3,"file":"component---src-pages-page-2-tsx-d6006de5a98668a703f8.js","mappings":"mNAUA,MAAMA,GAAe,8FAIIC,EAAAA,GAAAA,GCXhBC,EAAAA,GAAAA,SAAAA,QDOY,OAcrB,MAPsC,EACpCC,SAAAA,EACAC,UAAAA,MAEA,QAACJ,EAAD,CAAiBI,UAAWA,GAAYD,I,0FEK1C,UAnBgB,KACd,QAAC,IAAD,MACE,QAAC,IAAD,MACE,QAAC,IAAD,MACE,8CACA,uCACA,mBACE,mBACE,QAAC,EAAAE,KAAD,CAAMC,GAAG,qBAAT,4BAEF,mBACE,QAAC,EAAAD,KAAD,CAAMC,GAAG,KAAT","sources":["webpack://andrew-hummel-profile/./src/components/Container.tsx","webpack://andrew-hummel-profile/./src/styles/mixins.ts","webpack://andrew-hummel-profile/./src/pages/page-2.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport styled from '@emotion/styled';\n\nimport { widths } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\ninterface ContainerProps {\n  className?: string;\n}\n\nconst StyledContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\nconst Container: FC<ContainerProps> = ({\n  children,\n  className\n}): JSX.Element => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n);\n\nexport default Container;\n","import { dimensions } from './variables';\n\nexport const getEmSize = (size: number): number =>\n  size / dimensions.fontSize.regular;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport Page from '../components/Page';\nimport Container from '../components/Container';\nimport IndexLayout from '../layouts';\n\nconst PageTwo = (): JSX.Element => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Hi from the second page</h1>\n        <p>Welcome to page 2</p>\n        <ul>\n          <li>\n            <Link to=\"/a-markdown-page/\">Show me some Markdown!</Link>\n          </li>\n          <li>\n            <Link to=\"/\">Take me back home.</Link>\n          </li>\n        </ul>\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default PageTwo;\n"],"names":["StyledContainer","widths","dimensions","children","className","Link","to"],"sourceRoot":""}